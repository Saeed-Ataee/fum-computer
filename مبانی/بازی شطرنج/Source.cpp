#include <windows.h>
#include <ctime>
#include <stdio.h>
#include <conio.h>

const int HEIGHT = 39;
const int WIDTH = 80;

char map[HEIGHT][WIDTH]={
	{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
	{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ','r',' ','.',' ','n',' ','.',' ','b',' ','.',' ','q',' ','.',' ','k',' ','.',' ','b',' ','.',' ','n',' ','.',' ','r',' ','.',' ','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ','p',' ','.',' ','p',' ','.',' ','p',' ','.',' ','p',' ','.',' ','p',' ','.',' ','p',' ','.',' ','p',' ','.',' ','p',' ','.',' ','7',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ','6',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ','5',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ','4',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ','3',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ','P',' ','.',' ','P',' ','.',' ','P',' ','.',' ','P',' ','.',' ','P',' ','.',' ','P',' ','.',' ','P',' ','.',' ','P',' ','.',' ','2',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ','R',' ','.',' ','N',' ','.',' ','B',' ','.',' ','Q',' ','.',' ','K',' ','.',' ','B',' ','.',' ','N',' ','.',' ','R',' ','.',' ','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ',' ',' ','A',' ',' ',' ','B',' ',' ',' ','C',' ',' ',' ','D',' ',' ',' ','E',' ',' ',' ','F',' ',' ',' ','G',' ',' ',' ','H',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
	{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
};

char game_over[5][16] = {
	{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
	{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
	{ '#', ' ', ' ', 'G', 'A', 'M', 'E', ' ', 'O', 'V', 'E', 'R', '!', ' ', ' ', '#' },
	{ '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
	{ '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', 'S' },
};

char in_board;						//a character to save which piece is on board to move
char base[ 8 ][ 8 ];				//the chess board
int x, y;							//the coordinates of cursor
int team_sw = 0;					//an integer to save which player should move
int x_king1, y_king1;
int x_king2, y_king2;
int turn = 2;

void gotoxy(int x, int y){
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD cursorCoord;
	cursorCoord.X=x;
	cursorCoord.Y=y;
	SetConsoleCursorPosition(consoleHandle, cursorCoord);
}

void clrscr(){
	system("cls");
}

void setTextColor(int textColor, int backColor=0){
	HANDLE consoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);
	int colorAttribute = backColor << 4 | textColor;
	SetConsoleTextAttribute(consoleHandle, colorAttribute);
}

void sleep(unsigned int mseconds){
	clock_t goal = mseconds + clock();
	while (goal > clock());
}

//a method for printing the map
void print_map(){
	for( int i = 0; i < HEIGHT; i ++ ){
		for( int j = 0; j < WIDTH; j ++ ){
			printf("%c", map[ i ][ j ] );
		}
	}
}

void end_game(){
	for( int i = 0; i < 5; i ++ ){
		for( int j = 0; j < 16; j ++ ){
			gotoxy(32 + j, 17 + i);
			setTextColor(9, 13);
			printf("%c", game_over[ i ][ j ]);
		}
		printf("\n");
	}
}

//a method for showing which player should move : just change the color of team
void team_changer(){
	if( turn == 1 ){
		if( team_sw == 1 ){
			gotoxy( 42, 4);
			setTextColor(7);
			printf("Team 2");
			gotoxy( 42, 32 );
			setTextColor(4);
			printf("Team 1");
			gotoxy(5 + y * 4, 4 + x * 4);
			setTextColor(7);
		}else if( team_sw == 2 ){
			gotoxy( 42, 4);
			setTextColor(4);
			printf("Team 2");
			gotoxy( 42, 32 );
			setTextColor(7);
			printf("Team 1");
			gotoxy(5 + y * 4, 4 + x * 4);
		}
	}else{
		if( team_sw == 1 ){
			gotoxy( 42, 4);
			setTextColor(7);
			printf("Team 1");
			gotoxy( 42, 32 );
			setTextColor(4);
			printf("Team 2");
			gotoxy(5 + y * 4, 4 + x * 4);
			setTextColor(7);
		}else if( team_sw == 2 ){
			gotoxy( 42, 4);
			setTextColor(4);
			printf("Team 1");
			gotoxy( 42, 32 );
			setTextColor(7);
			printf("Team 2");
			gotoxy(5 + y * 4, 4 + x * 4);
		}
	}
}

bool move( int xx, int yy ){
	if( in_board == 'p' ){
		
	}else if( in_board == 'P' ){

	}else if( in_board == 'r' || in_board == 'R' ){

	}else if( in_board == 'b' || in_board == 'B' ){

	}
	return false;
}

//the method runs whole time of game duration
void game(){
	char c;
	int pre_x, pre_y;
	while( 1 ){
		c = getch();
		if( c =='p' || c == 'P' ){
			if( !team_sw ){
				if( base[ x ][ y ] > 96 ){
					team_sw = 2;
					turn = 2;
				}else if( base[ x ][ y ] > 64 ){
					team_sw = 1;
					turn = 1;
				}
			}
			if( in_board ){
				if( team_sw == 1 && base[ x ][ y ] > 64 && base[ x ][ y ] < 97 ){
				}else if( team_sw == 2 && base[ x ][ y ] > 96 ){
				}else{
					base[ x ][ y ] = in_board;
					in_board = NULL;
					gotoxy(5 + y * 4, 4 + x * 4);
					printf("%c", base[ x ][ y ] );
					if( base[ x ][ y ] == 'K' ){
						x_king1 = x;
						y_king1 = y;
					}else if( base[ x ][ y ] == 'k' ){
						x_king2 = x;
						y_king2 = y;
					}
					if(team_sw == 1 && x_king2 == x && y_king2 == y ){
						clrscr();
						end_game();
						sleep(3000);
						clrscr();
						if( turn == 1 ){
							printf("team 1 wins !!?\n");
						}else{
							printf("team 2 wins !!?\n");
						}
						break;
					}else if( team_sw == 2 && x_king1 == x && y_king1 == y ){
						clrscr();
						end_game();
						sleep(3000);
						clrscr();
						if( turn == 1 ){
							printf("team 2 wins !!?\n");
						}else{
							printf("team 1 wins !!?\n");
						}
						break;
					}
					if( pre_x != x ){
						if( team_sw == 1 ){
							team_sw = 2;
						}else{
							team_sw = 1;
						}
						pre_x = -1;
						pre_y = -1;
					}else if( pre_y != y ){
						if( team_sw == 1 ){
							team_sw = 2;
						}else{
							team_sw = 1;
						}
						pre_x = -1;
						pre_y = -1;
					}
				}
			}else if( !in_board && base[ x ][ y ] && base[ x ][ y ] > 64 && base[ x ][ y ] < 97 && team_sw == 1 ){
				in_board = base [ x ][ y ];
				pre_x = x;
				pre_y = y;
				base[ x ][ y ] = NULL;
				gotoxy(5 + y * 4, 4 + x * 4);
				printf("%c", base[ x ][ y ] );
			}else if( !in_board && base[ x ][ y ] && base[ x ][ y ] > 96 && team_sw == 2 ){
				in_board = base [ x ][ y ];
				pre_x = x;
				pre_y = y;
				base[ x ][ y ] = NULL;
				gotoxy(5 + y * 4, 4 + x * 4);
				printf("%c", base[ x ][ y ] );
			}
		}
		else if( c == -32 )
			c = getch();
		switch( c ){
		case 77:
			if( y < 7 ){
				y ++;
			}
			break;
		case 75:
			if( y > 0 ){
				y --;
			}
			break;
		case 80:
			if( x < 7 ){
				x ++;
			}
			break;
		case 72:
			if( x > 0 ){
				x --;
			}
			break;
		}
		gotoxy(5 + y * 4, 4 + x * 4);
		team_changer();
	}
}

void main(){
	for( int i = 0; i < 8; i ++ ){
		for( int j = 0; j < 8; j ++ ){
			base[ i ][ j ] = NULL;
		}
	}
	base[ 0 ][ 0 ] = base[ 0 ][ 7 ] = 'r';
	base[ 7 ][ 0 ] = base[ 7 ][ 7 ] = 'R';
	base[ 0 ][ 1 ] = base[ 0 ][ 6 ] = 'n';
	base[ 7 ][ 1 ] = base[ 7 ][ 6 ] = 'N';
	base[ 0 ][ 2 ] = base[ 0 ][ 5 ] = 'b';
	base[ 7 ][ 2 ] = base[ 7 ][ 5 ] = 'B';
	base[ 0 ][ 3 ] = 'q';
	x_king2 = 0;
	y_king2 = 4;
	x_king1 = 7;
	y_king1 = 4;
	base[ 7 ][ 3 ]= 'Q';
	base[ 0 ][ 4 ] = 'k';
	base[ 7 ][ 4 ] = 'K';
	for( int i = 0; i < 8; i ++ ){
		base[ 1 ][ i ] = 'p';
		base[ 6 ][ i ] = 'P';
	}
	in_board = NULL;
	x = 3;
	y = 4;
	print_map();
	gotoxy(5 + y * 4, 4 + x * 4);
	game();
}